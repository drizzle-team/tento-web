---
import GlobalStyles from "@components/layout/GlobalStyles.astro";
import MDXStyles from "@components/layout/MDXStyles.astro";
import MDXNavigation from "@components/layout/MDXNavigation.astro";
import type { IHeading } from "../types/astro";

import SidebarWrap from "@components/layout/SidebarWrap.astro";

import getContentTree from "@/utils/getContentTree";

interface Props {
  title: string;
  headings: IHeading[];
}
const { headings } = Astro.props;
const { slug } = Astro.params;
const { tree, filteredHeadings, title } = await getContentTree({
  headings,
  slug,
});
---

<!doctype html>
<html lang="en" class="dark" style="color-scheme: dark">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, viewport-fit=cover"
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <title>Tento - {title}</title>
    <meta
      name="description"
      content="Simple and powerful API for Shopify GraphQL, metaobjects  and metafields API with migrations support"
    />
    <meta property="og:title" content={`Tento - ${title}`} />
    <meta
      property="og:description"
      content="Simple and powerful API for Shopify GraphQL, metaobjects  and metafields API with migrations support"
    />
    <link rel="stylesheet" href="/preferred.css" />
  </head>
  <body>
    <GlobalStyles />
    <MDXStyles />
    <MDXNavigation /> 
    <main class="documentation-container">
      <SidebarWrap filteredHeadings={filteredHeadings} tree={tree} />
      <div class="documentation-content-wrap scrollbar">
        <div class="documentation-content">
          <slot />
        </div>
      </div>
    </main>
  </body>
  <style is:global>
    .documentation-header {
      position: -webkit-sticky;
      position: sticky;
      top: 0;
      z-index: 20;
      width: 100%;
    }

    .documentation-content-wrap {
      display: grid;
      width: 100%;
      grid-template-columns: minmax(0, 1fr) 260px;
      overflow-y: scroll;
      overflow-x: hidden;
    }

    .right-aside-container {
      position: relative;
    }

    .navigation_nav_container_blur {
      -webkit-backdrop-filter: blur(12px);
      backdrop-filter: blur(12px);
      pointer-events: none;
      position: absolute;
      z-index: -1;
      height: 100%;
      width: 100%;
      background-color: hsla(0, 0%, 100%, 0.85);
      box-shadow:
        0 0 0 0 transparent,
        0 0 0 0 transparent,
        0 2px 4px 0 rgba(0, 0, 0, 0.02),
        0 1px 0 0 rgba(0, 0, 0, 0.06);
    }
    .navigation_nav_content_wrap {
      margin-left: auto;
      margin-right: auto;
      display: flex;
      height: 64px;
      max-width: 1440px;
      align-items: center;
      gap: 8px;
      padding-left: max(env(safe-area-inset-left), 24px);
      padding-right: max(env(safe-area-inset-right), 24px);
    }
    .documentation-container {
      max-width: 1440px;
      width: 100%;
      display: flex;
      margin: 0 auto;
      max-height: calc(100vh - 64px);
    }

    .documentation-content {
      padding-left: 48px;
      padding-right: 40px;
      padding-top: 1rem;
      padding-bottom: 64px;
      width: 100%;
      position: relative;
    }

    @media screen and (max-width: 1279px) {
      .documentation-content {
        padding-left: 24px;
        padding-right: 12px;
      }
    }

    @media screen and (max-width: 1024px) {
      .documentation-content-wrap {
        grid-template-columns: minmax(0, 1fr);
      }
      .right-aside-container {
        display: none;
      }
    }

    @media screen and (max-width: 768px) {
      .documentation-content {
        padding-left: 16px;
        padding-right: 16px;
        padding-top: 1rem;
        width: 100%;
      }
    }
  </style>
</html>
<script>
  const hash = window.location.hash;
  if (hash !== "") {
    const targetElement = document.querySelector(hash);
    if (targetElement) {
      targetElement.scrollIntoView();
    }
  }
</script>
